# Anomaly Detection Configuration File

# Data Configuration
data:
  fs: 4.0  # Sampling frequency (Hz)
  window_sec: 30.0  # Window size in seconds
  overlap: 0.5  # Window overlap ratio
  interpolation_method: "linear"  # Missing value interpolation
  normalization_method: "zscore"  # Normalization method
  
  # EDA preprocessing
  eda:
    lowpass_filter: true
    cutoff_frequency: 1.0  # Hz
    filter_order: 4
  
  # Feature engineering
  features:
    use_advanced_features: true
    statistical_features: true
    frequency_features: true
    time_domain_features: true
    cross_signal_features: true

# Model Configuration
models:
  isolation_forest:
    enabled: true
    params:
      n_estimators: 200
      max_samples: "auto"
      contamination: null
      random_state: 42
      n_jobs: -1
  
  autoencoder:
    enabled: true
    params:
      latent_dim: 32
      lr: 0.001
      epochs: 40
      batch_size: 128
      device: "auto"  # "cuda", "cpu", or "auto"
  
  vae:
    enabled: true
    params:
      latent_dim: 32
      hidden_dims: [256, 128, 64]
      beta: 1.0
      lr: 0.001
      epochs: 100
      batch_size: 128
      device: "auto"
  
  lstm:
    enabled: true
    params:
      hidden_dim: 64
      latent_dim: 32
      num_layers: 2
      dropout: 0.2
      lr: 0.001
      epochs: 100
      batch_size: 32
      device: "auto"
  
  transformer:
    enabled: true
    params:
      d_model: 64
      nhead: 8
      num_layers: 3
      dim_feedforward: 256
      dropout: 0.1
      lr: 0.001
      epochs: 50
      batch_size: 32
      device: "auto"

# Ensemble Configuration
ensemble:
  enabled: true
  combination_method: "weighted_voting"  # "weighted_voting", "stacking", "dynamic"
  models: ["isolation_forest", "autoencoder", "vae"]  # Models to include in ensemble
  meta_model: "logistic_regression"  # For stacking

# Evaluation Configuration
evaluation:
  cross_validation:
    enabled: true
    method: "stratified"  # "stratified", "time_series", "group"
    n_splits: 5
    gap: 0  # For time series CV
  
  subject_independent:
    enabled: true
  
  uncertainty_quantification:
    enabled: true
    n_bootstrap: 100
    bootstrap_ratio: 0.8
  
  metrics:
    - "roc_auc"
    - "avg_precision"
    - "f1"
    - "precision"
    - "recall"
    - "accuracy"

# Visualization Configuration
visualization:
  interactive: true
  save_static: true
  theme: "plotly_white"
  
  plots:
    time_series: true
    roc_curves: true
    confusion_matrix: true
    feature_importance: true
    latent_space: true
    score_distribution: true
    dashboard: true

# Logging Configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/anomaly_detection.log"
  console: true

# Output Configuration
output:
  base_dir: "outputs"
  save_models: true
  save_predictions: true
  save_visualizations: true
  save_reports: true
  
  # Subdirectories
  models_dir: "models"
  plots_dir: "plots"
  reports_dir: "reports"
  predictions_dir: "predictions"

# Paths Configuration
paths:
  data_csv: "data_csv"
  data_raw: "data_raw"
  wesad_root: "data_raw/WESAD"

# Performance Configuration
performance:
  n_jobs: -1  # Number of parallel jobs (-1 for all cores)
  memory_limit: "8GB"  # Memory limit for large datasets
  
# Threshold Configuration
thresholds:
  default_percentile: 95  # Default threshold percentile
  optimization:
    enabled: true
    metric: "f1"  # Metric to optimize for threshold selection
    cv_folds: 3

# Anomaly Injection (for unlabeled data)
anomaly_injection:
  enabled: false
  rate: 0.02  # Fraction of samples to inject anomalies
  scale: 3.0  # Scale factor for anomaly magnitude
  random_state: 42

# Real-time Configuration (for streaming data)
realtime:
  enabled: false
  buffer_size: 1000  # Number of samples to keep in buffer
  update_interval: 10  # Seconds between model updates
  alert_threshold: 0.8  # Threshold for triggering alerts

# API Configuration
api:
  enabled: false
  host: "0.0.0.0"
  port: 8000
  cors_origins: ["*"]
  rate_limit: "100/minute"
  
# Database Configuration (for storing results)
database:
  enabled: false
  type: "sqlite"  # "sqlite", "postgresql", "mysql"
  url: "sqlite:///anomaly_detection.db"
  
# Experiment Tracking
experiment_tracking:
  enabled: false
  backend: "mlflow"  # "mlflow", "wandb", "tensorboard"
  experiment_name: "anomaly_detection"
  tracking_uri: "sqlite:///mlruns.db"
